//==================================================================================================
// PROJECT
//==================================================================================================
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // ANDROID
        classpath 'com.android.tools.build:gradle:2.2.0'
        // BINTRAY
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}
//==================================================================================================
// ANDROID
//==================================================================================================
apply plugin: 'com.android.library'
android {

    compileSdkVersion 10
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 23
        versionCode System.getenv("CIRCLE_BUILD_NUM") ? System.getenv("CIRCLE_BUILD_NUM").toInteger() : 1
        versionName project.version ?: "BETA"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.google.code.gson:gson:2.4'
    compile 'net.pubnative:url_driller:1.3.2'
    // JVM tests
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.assertj:assertj-android:1.0.0'
    testCompile 'org.robolectric:robolectric:3.1.2'
    testCompile 'org.mockito:mockito-core:2.1.0'
}
//==================================================================================================
// CIRCLE CI
//==================================================================================================
if (System.getenv("CIRCLECI")) {

    //----------------------------------------------------------------------------------------------
    // BINTRAY
    //----------------------------------------------------------------------------------------------
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'com.github.dcendents.android-maven'
    install {
        repositories.mavenInstaller {
            // This generates POM.xml with proper parameters
            pom {
                project {
                    packaging 'aar'
                    name project.name
                    description "Pubnative API library for Android"
                    url "http://www.pubnative.net"
                    licenses {
                        license {
                            name "MIT"
                            url "https://opensource.org/licenses/MIT"
                        }
                    }
                    developers {
                        developer {
                            id "cerberillo"
                            name "David Martin"
                            email "david@martinmacias.com"
                        }
                    }
                    scm {
                        connection "https://github.com/pubnative/pubnative-android-library.git"
                        developerConnection "https://github.com/pubnative/pubnative-android-library.git"
                        url "https://github.com/pubnative/pubnative-android-library"
                    }
                }
            }
        }
    }
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }
    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.rootProject.files(android.getBootClasspath().join(File.pathSeparator))
        options.memberLevel = JavadocMemberLevel.PUBLIC
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
        archives javadocJar
        archives sourcesJar
    }
    bintray {
        user = System.getenv("BINTRAY_USER")
        key = System.getenv("BINTRAY_API_KEY")
        pkg {
            configurations = ['archives']
            userOrg = 'pubnative'
            repo = 'maven'
            name = project.name
            vcsUrl = "https://github.com/pubnative/advertising-id-client.git"
            licenses = ['MIT']
            version{
                name = project.version
                vcsTag = project.version
            }
        }
    }

    //----------------------------------------------------------------------------------------------
    // JAR
    //----------------------------------------------------------------------------------------------
    task createJar(type: Copy) {
        from('build/intermediates/bundles/release/')
        into("${System.getenv("CIRCLE_ARTIFACTS")}/")
        include('classes.jar')
        rename('classes.jar', "${project.name}_${version}.jar")
    }
    task deleteJar(type: Delete) {
        delete "${System.getenv("CIRCLE_ARTIFACTS")}/${project.name}_${version}.jar"
    }
    createJar.dependsOn(deleteJar, build)
}